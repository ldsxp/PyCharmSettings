<templateSet group="lds">
  <template name="idjango" value="# Django 环境设置 ==================================================================&#10;from ilds.django.util import django_setup&#10;django_setup(r'mysite', site_path=None)&#10;# ------------------------------------------------------------------ Django 环境设置&#10;&#10;$END$" description="导入 django 环境" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if" value="if $ITERABLE$:&#10;    $END$&#10;    " description="if ...:" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="isavexlsx" value="from openpyxl.workbook import Workbook&#10;wb = Workbook()&#10;ws = wb.active&#10;ws.append([1, 2, 3])&#10;wb.save('保存内容到xlsx文件.xlsx')" description="保存内容到 xlsx 文件" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="idj_bat_create" value="loadList = []&#10;&#10;kwargs = {}&#10;loadList.append($NAME$(**kwargs))&#10;&#10;print('成功导入 %s 行' % len($NAME$.objects.bulk_create(loadList)))" description="批量导入 Django 数据库" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="md_url" value="import re&#10;import os&#10;&#10;# 匹配链接的正则表达式 名称 链接&#10;LINK_NAME_UEL_COMPILE = re.compile(r'\[(.*?)\]\((.*?)\)')  # *([^\n]+?) *#* *(?:\n+|$)   [链接](../url.html)&#10;&#10;file = ''&#10;&#10;with open(file, 'r', encoding='utf-8') as in_f:&#10;    link_result = LINK_NAME_UEL_COMPILE.findall(in_f.read())&#10;    url_set = set()&#10;    if link_result:&#10;        for result in link_result:&#10;            # print(result, result[1].rstrip('/').replace('/', '\\'))&#10;            name = result[0]&#10;            url = result[1].rstrip('/')&#10;            slug = os.path.basename(url)&#10;            if slug in url_set:&#10;                print('已经存在', slug, name, url)&#10;            else:&#10;                url_set.add(slug)&#10;" description="获取md文件中的链接" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="idj_atomic" value="from django.db import transaction  # @transaction.atomic 或者 with transaction.atomic():&#10;" description="数据库事务" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="idir" value="BASE_DIR = os.path.dirname(os.path.abspath(__file__))&#10;#from django.conf import settings&#10;# settings.BASE_DIR" description="文件所在的目录" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="idj_user" value="from django.contrib.auth import get_user_model&#10;&#10;User = get_user_model()" description="获取用户模型" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>